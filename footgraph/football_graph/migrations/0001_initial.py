# Generated by Django 5.2.3 on 2025-06-13 10:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('founded_year', models.IntegerField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubs', to='football_graph.league')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('shirt_number', models.IntegerField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('market_value', models.CharField(blank=True, max_length=20, null=True)),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players', to='football_graph.club')),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField(blank=True, null=True)),
                ('expected_goals', models.FloatField(blank=True, null=True)),
                ('xg_on_target', models.FloatField(blank=True, null=True)),
                ('penalty_goals', models.IntegerField(blank=True, null=True)),
                ('non_penalty_xg', models.FloatField(blank=True, null=True)),
                ('shots', models.IntegerField(blank=True, null=True)),
                ('shots_on_target', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('expected_assists', models.FloatField(blank=True, null=True)),
                ('successful_passes', models.IntegerField(blank=True, null=True)),
                ('pass_accuracy', models.FloatField(blank=True, null=True)),
                ('accurate_long_balls', models.IntegerField(blank=True, null=True)),
                ('long_ball_accuracy', models.FloatField(blank=True, null=True)),
                ('chances_created', models.IntegerField(blank=True, null=True)),
                ('successful_crosses', models.IntegerField(blank=True, null=True)),
                ('cross_accuracy', models.FloatField(blank=True, null=True)),
                ('successful_dribbles', models.IntegerField(blank=True, null=True)),
                ('dribble_success', models.FloatField(blank=True, null=True)),
                ('touches', models.IntegerField(blank=True, null=True)),
                ('touches_in_opposition_box', models.IntegerField(blank=True, null=True)),
                ('dispossessed', models.IntegerField(blank=True, null=True)),
                ('fouls_won', models.IntegerField(blank=True, null=True)),
                ('penalties_awarded', models.IntegerField(blank=True, null=True)),
                ('tackles_won', models.IntegerField(blank=True, null=True)),
                ('tackles_won_percentage', models.FloatField(blank=True, null=True)),
                ('duels_won', models.IntegerField(blank=True, null=True)),
                ('duels_won_percentage', models.FloatField(blank=True, null=True)),
                ('aerial_duels_won', models.IntegerField(blank=True, null=True)),
                ('aerial_duels_won_percentage', models.FloatField(blank=True, null=True)),
                ('interceptions', models.IntegerField(blank=True, null=True)),
                ('blocked', models.IntegerField(blank=True, null=True)),
                ('fouls_committed', models.IntegerField(blank=True, null=True)),
                ('recoveries', models.IntegerField(blank=True, null=True)),
                ('possession_won_final_3rd', models.IntegerField(blank=True, null=True)),
                ('dribbled_past', models.IntegerField(blank=True, null=True)),
                ('yellow_cards', models.IntegerField(blank=True, null=True)),
                ('red_cards', models.IntegerField(blank=True, null=True)),
                ('saves', models.IntegerField(blank=True, null=True)),
                ('save_percentage', models.FloatField(blank=True, null=True)),
                ('goals_conceded', models.IntegerField(blank=True, null=True)),
                ('goals_prevented', models.FloatField(blank=True, null=True)),
                ('clean_sheets', models.IntegerField(blank=True, null=True)),
                ('error_led_to_goal', models.IntegerField(blank=True, null=True)),
                ('high_claim', models.IntegerField(blank=True, null=True)),
                ('gk_pass_accuracy', models.FloatField(blank=True, null=True)),
                ('gk_accurate_long_balls', models.IntegerField(blank=True, null=True)),
                ('gk_long_ball_accuracy', models.FloatField(blank=True, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='football_graph.player')),
            ],
        ),
    ]
